// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.foo.service.impl;

import com.foo.domain.Consultation;
import com.foo.domain.Patient;
import com.foo.repository.PatientRepository;
import com.foo.service.api.ConsultationService;
import com.foo.service.impl.PatientServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PatientServiceImpl_Roo_Service_Impl {
    
    declare @type: PatientServiceImpl: @Service;
    
    declare @type: PatientServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PatientRepository PatientServiceImpl.patientRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ConsultationService PatientServiceImpl.consultationService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param patientRepository
     * @param consultationService
     */
    @Autowired
    public PatientServiceImpl.new(PatientRepository patientRepository, @Lazy ConsultationService consultationService) {
        setPatientRepository(patientRepository);
        setConsultationService(consultationService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return PatientRepository
     */
    public PatientRepository PatientServiceImpl.getPatientRepository() {
        return patientRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patientRepository
     */
    public void PatientServiceImpl.setPatientRepository(PatientRepository patientRepository) {
        this.patientRepository = patientRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConsultationService
     */
    public ConsultationService PatientServiceImpl.getConsultationService() {
        return consultationService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param consultationService
     */
    public void PatientServiceImpl.setConsultationService(ConsultationService consultationService) {
        this.consultationService = consultationService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @return Map
     */
    public Map<String, List<MessageI18n>> PatientServiceImpl.validate(Patient patient) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @param consultationsToAdd
     * @return Patient
     */
    @Transactional
    public Patient PatientServiceImpl.addToConsultations(Patient patient, Iterable<Long> consultationsToAdd) {
        List<Consultation> consultations = getConsultationService().findAll(consultationsToAdd);
        patient.addToConsultations(consultations);
        return getPatientRepository().save(patient);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @param consultationsToRemove
     * @return Patient
     */
    @Transactional
    public Patient PatientServiceImpl.removeFromConsultations(Patient patient, Iterable<Long> consultationsToRemove) {
        List<Consultation> consultations = getConsultationService().findAll(consultationsToRemove);
        patient.removeFromConsultations(consultations);
        return getPatientRepository().save(patient);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @param consultations
     * @return Patient
     */
    @Transactional
    public Patient PatientServiceImpl.setConsultations(Patient patient, Iterable<Long> consultations) {
        List<Consultation> items = getConsultationService().findAll(consultations);
        Set<Consultation> currents = patient.getConsultations();
        Set<Consultation> toRemove = new HashSet<Consultation>();
        for (Iterator<Consultation> iterator = currents.iterator(); iterator.hasNext();) {
            Consultation nextConsultation = iterator.next();
            if (items.contains(nextConsultation)) {
                items.remove(nextConsultation);
            } else {
                toRemove.add(nextConsultation);
            }
        }
        patient.removeFromConsultations(toRemove);
        patient.addToConsultations(items);
        // Force the version update of the parent side to know that the parent has changed
        // because it has new books assigned
        patient.setVersion(patient.getVersion() + 1);
        return getPatientRepository().save(patient);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     */
    @Transactional
    public void PatientServiceImpl.delete(Patient patient) {
        // Clear bidirectional one-to-many parent relationship with Consultation
        for (Consultation item : patient.getConsultations()) {
            item.setPatient(null);
        }
        
        getPatientRepository().delete(patient);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Patient> PatientServiceImpl.save(Iterable<Patient> entities) {
        return getPatientRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void PatientServiceImpl.delete(Iterable<Long> ids) {
        List<Patient> toDelete = getPatientRepository().findAll(ids);
        getPatientRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Patient
     */
    @Transactional
    public Patient PatientServiceImpl.save(Patient entity) {
        return getPatientRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Patient
     */
    public Patient PatientServiceImpl.findOne(Long id) {
        return getPatientRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Patient
     */
    public Patient PatientServiceImpl.findOneForUpdate(Long id) {
        return getPatientRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Patient> PatientServiceImpl.findAll(Iterable<Long> ids) {
        return getPatientRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Patient> PatientServiceImpl.findAll() {
        return getPatientRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long PatientServiceImpl.count() {
        return getPatientRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Patient> PatientServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getPatientRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Patient> PatientServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getPatientRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Patient> PatientServiceImpl.getEntityType() {
        return Patient.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> PatientServiceImpl.getIdType() {
        return Long.class;
    }
    
}
