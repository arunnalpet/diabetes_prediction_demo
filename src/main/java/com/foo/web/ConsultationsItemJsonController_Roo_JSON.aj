// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.foo.web;

import com.foo.domain.Consultation;
import com.foo.service.api.ConsultationService;
import com.foo.web.ConsultationsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect ConsultationsItemJsonController_Roo_JSON {
    
    declare @type: ConsultationsItemJsonController: @RestController;
    
    declare @type: ConsultationsItemJsonController: @RequestMapping(value = "/api/consultations/{consultation}", name = "ConsultationsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ConsultationService ConsultationsItemJsonController.consultationService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param consultationService
     */
    @Autowired
    public ConsultationsItemJsonController.new(ConsultationService consultationService) {
        this.consultationService = consultationService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConsultationService
     */
    public ConsultationService ConsultationsItemJsonController.getConsultationService() {
        return consultationService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param consultationService
     */
    public void ConsultationsItemJsonController.setConsultationService(ConsultationService consultationService) {
        this.consultationService = consultationService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Consultation
     */
    @ModelAttribute
    public Consultation ConsultationsItemJsonController.getConsultation(@PathVariable("consultation") Long id) {
        Consultation consultation = consultationService.findOne(id);
        if (consultation == null) {
            throw new NotFoundException(String.format("Consultation with identifier '%s' not found",id));
        }
        return consultation;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param consultation
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> ConsultationsItemJsonController.show(@ModelAttribute Consultation consultation) {
        return ResponseEntity.ok(consultation);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param consultation
     * @return UriComponents
     */
    public static UriComponents ConsultationsItemJsonController.showURI(Consultation consultation) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(ConsultationsItemJsonController.class).show(consultation))
            .buildAndExpand(consultation.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedConsultation
     * @param consultation
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> ConsultationsItemJsonController.update(@ModelAttribute Consultation storedConsultation, @Valid @RequestBody Consultation consultation, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        consultation.setId(storedConsultation.getId());
        getConsultationService().save(consultation);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param consultation
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> ConsultationsItemJsonController.delete(@ModelAttribute Consultation consultation) {
        getConsultationService().delete(consultation);
        return ResponseEntity.ok().build();
    }
    
}
