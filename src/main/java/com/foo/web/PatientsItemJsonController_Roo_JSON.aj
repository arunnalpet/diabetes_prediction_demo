// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.foo.web;

import com.foo.domain.Patient;
import com.foo.service.api.PatientService;
import com.foo.web.PatientsItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect PatientsItemJsonController_Roo_JSON {
    
    declare @type: PatientsItemJsonController: @RestController;
    
    declare @type: PatientsItemJsonController: @RequestMapping(value = "/api/patients/{patient}", name = "PatientsItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PatientService PatientsItemJsonController.patientService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param patientService
     */
    @Autowired
    public PatientsItemJsonController.new(PatientService patientService) {
        this.patientService = patientService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return PatientService
     */
    public PatientService PatientsItemJsonController.getPatientService() {
        return patientService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patientService
     */
    public void PatientsItemJsonController.setPatientService(PatientService patientService) {
        this.patientService = patientService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Patient
     */
    @ModelAttribute
    public Patient PatientsItemJsonController.getPatient(@PathVariable("patient") Long id) {
        Patient patient = patientService.findOne(id);
        if (patient == null) {
            throw new NotFoundException(String.format("Patient with identifier '%s' not found",id));
        }
        return patient;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> PatientsItemJsonController.show(@ModelAttribute Patient patient) {
        return ResponseEntity.ok(patient);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @return UriComponents
     */
    public static UriComponents PatientsItemJsonController.showURI(Patient patient) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(PatientsItemJsonController.class).show(patient))
            .buildAndExpand(patient.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedPatient
     * @param patient
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> PatientsItemJsonController.update(@ModelAttribute Patient storedPatient, @Valid @RequestBody Patient patient, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        patient.setId(storedPatient.getId());
        getPatientService().save(patient);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param patient
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> PatientsItemJsonController.delete(@ModelAttribute Patient patient) {
        getPatientService().delete(patient);
        return ResponseEntity.ok().build();
    }
    
}
